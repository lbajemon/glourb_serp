---
title: "Corpus pollution"
format: html
editor: visual
---

### Set-up

```{r}
library(tidyverse)
library(strex)
library(rnaturalearth)
library(sf)
```

### Get corpus

```{r}
corpus = read.csv("collected_data/corpus_distinct.csv")

### 1 - Où parle-t-on de la qualité de l'eau ?
pollution = corpus %>% 
  filter(str_detect(text_en, "acidification|phosphorus|organic matter|nitrate|mineral|temperature|microbe|micro-organism|phosphate|pollutant")) %>% 
  select(c("fid", "urban_aggl", "position", "title", "link", "domain", "displayed_link", "snippet", "trans_snippet", "text", "text_en", "tokenized_text", "tokenized_noloc", "hl", "query", "riviere"))

write.csv(pollution, "analysis/pollution/corpus_qualite_eau.csv") # 3414 pages

### 2 - Où parle-t-on du traitement des eaux ?
traitement = corpus %>% 
  filter(str_detect(text_en, "acidification|phosphorus|organic matter|nitrate|mineral|temperature|microbe|micro-organism|phosphate|pollutant") & str_detect(text_en, "wastewater|sewage|sanitation")) %>% 
  select(c("fid", "urban_aggl", "position", "title", "link", "domain", "displayed_link", "snippet", "trans_snippet", "text", "text_en", "tokenized_text", "tokenized_noloc", "hl", "query", "riviere"))

write.csv(traitement, "analysis/pollution/corpus_traitement_eaux.csv") # 880 pages

### 3 - Où parle-t-on de la pollution agricole ? 
agricole = corpus %>% 
  filter(str_detect(text_en, "acidification|phosphorus|organic matter|nitrate|mineral|temperature|microbe|micro-organism|phosphate|pollutant|pesticide|contamination") & str_detect(text_en, "agriculture|agricultural|diffuse pollution|farmland|farming")) %>% 
   select(c("fid", "urban_aggl", "position", "title", "link", "domain", "displayed_link", "snippet", "trans_snippet", "text", "text_en", "tokenized_text", "tokenized_noloc", "hl", "query", "riviere"))

write.csv(agricole, "analysis/pollution/corpus_pollution_agricole.csv") # 1559 pages

### 4 - Altération liée aux micro-organismes
microorga = corpus %>% 
  filter(str_detect(text_en, "micro-organism|escherichia coli|E.coli|E.Coli|E. Coli|E. coli|Escherichia coli|Escherichia Coli|coliform")) %>% 
  select(c("fid", "urban_aggl", "position", "title", "link", "domain", "displayed_link", "snippet", "trans_snippet", "text", "text_en", "tokenized_text", "tokenized_noloc", "hl", "query", "riviere"))

write.csv(microorga, "analysis/pollution/corpus_microorganismes.csv") # 267 pages
```

#### Get number of pages per city

```{r}
villes_pollution = pollution %>% 
  group_by(urban_aggl) %>% 
  distinct(link, .keep_all = TRUE) %>% 
  count() # 319 villes sur 374 
villes_pollution = rename(villes_pollution, nb = n)
write.csv(villes_pollution, "analysis/pollution/nb_occ_villes_pollution.csv")

villes_traitement = traitement %>% 
  group_by(urban_aggl) %>% 
  distinct(link, .keep_all = TRUE) %>% 
  count() 
villes_traitement = rename(villes_traitement, nb = n)
write.csv(villes_traitement, "analysis/pollution/nb_occ_villes_traitement.csv")

villes_agricole = agricole %>% 
  group_by(urban_aggl) %>% 
  distinct(link, .keep_all = TRUE) %>% 
  count() 
villes_agricole = rename(villes_agricole, nb = n)
write.csv(villes_agricole, "analysis/pollution/nb_occ_villes_agricole.csv")

villes_microorga = microorga %>% 
  group_by(urban_aggl) %>% 
  distinct(link, .keep_all = TRUE) %>% 
  count() 
villes_microorga = rename(villes_microorga, nb = n)
write.csv(villes_microorga, "analysis/pollution/nb_occ_villes_microorga.csv")
```

#### Map

```{r}
data_pollution = read.csv("input_data/data_city_river.csv") %>% 
  mutate(latitude = as.numeric(str_replace_all(latitude, ",", "."))) %>% 
  mutate(longitude = as.numeric(str_replace_all(longitude, ",", "."))) %>% 
  left_join(nb_poll, by = "urban_aggl") 

data_sf = st_as_sf(data_pollution, coords = c("longitude", "latitude"),crs = 4326)
# map
world_map = ne_countries(scale = "medium", returnclass = "sf")

# map
world_map %>% 
  ggplot() +
  # world map 
  geom_sf(fill = "#f0f0f1", color = "white", size = 0.2) +
  # city points
  geom_sf(data = data_sf,
          color = "#addd8e",
          alpha = 0.5,
          aes(size = nb)) +
   # equal earth projection
  coord_sf(crs = "+proj=eqearth") +
  # theme
  theme_void() +
  theme(legend.position = "bottom",
        legend.box = "vertical") +
  labs(size = "Nombre d'occurrences dans le corpus") 

ggsave("analysis/pollution/map_occurrences.svg", width = 4000, height = 2500, units = "px")
```
